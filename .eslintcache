[{"C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\index.js":"1","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\App.js":"2","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\reportWebVitals.js":"3","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\components\\Header\\Header.js":"4","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\components\\Footer\\Footer.js":"5","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\components\\Profile\\Profile.js":"6","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\pages\\Resume\\Resume.js":"7","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\pages\\Portfolio\\Portfolio.js":"8","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\components\\Timeline\\CustomTimeline.js":"9","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\utils\\resumeData.js":"10","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\components\\Button\\Button.js":"11","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\pages\\Contact\\Contact.js":"12","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\utils\\apiKeys.js":"13"},{"size":517,"mtime":1612545039061,"results":"14","hashOfConfig":"15"},{"size":1579,"mtime":1612545122525,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1612545039062,"results":"17","hashOfConfig":"15"},{"size":2150,"mtime":1612545122554,"results":"18","hashOfConfig":"15"},{"size":830,"mtime":1612545122553,"results":"19","hashOfConfig":"15"},{"size":2596,"mtime":1612545122556,"results":"20","hashOfConfig":"15"},{"size":10046,"mtime":1612545122561,"results":"21","hashOfConfig":"15"},{"size":4301,"mtime":1612545122560,"results":"22","hashOfConfig":"15"},{"size":1383,"mtime":1612545122556,"results":"23","hashOfConfig":"15"},{"size":6721,"mtime":1612992977986,"results":"24","hashOfConfig":"15"},{"size":404,"mtime":1612545122552,"results":"25","hashOfConfig":"15"},{"size":5736,"mtime":1612548945866,"results":"26","hashOfConfig":"15"},{"size":127,"mtime":1612547878074,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1d9567f",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\index.js",[],["62","63"],"C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\App.js",[],"C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\reportWebVitals.js",[],"C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\components\\Header\\Header.js",["64","65","66","67","68"],"import React from 'react'\r\nimport {\r\n    Nav,\r\n    Navbar\r\n} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Link, NavLink, withRouter} from 'react-router-dom';\r\nimport resumeData from '../../utils/resumeData';\r\n\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\n\r\nimport './Header.css';\r\nimport CustomButton from '../Button/Button';\r\n\r\nconst Header = (props) => {\r\n\r\n    const pathName = props?.location?.pathname;\r\n\r\n    return (\r\n        <div className='container_shadow'>\r\n            <Navbar expand='lg' sticky='top' className='header'>\r\n                {/* Home link */}\r\n                <Nav.Link as={NavLink} to='/' className='header_navlink'>\r\n                    <Navbar.Brand className='header_home'>\r\n                        <HomeRoundedIcon />\r\n                    </Navbar.Brand>\r\n                </Nav.Link>\r\n\r\n                <Navbar.Toggle />\r\n\r\n                <Navbar.Collapse>\r\n                    <Nav className='header_left'>\r\n                        <Nav.Link as={NavLink} to='/' className={pathName == '/' ? 'header_link_active' : 'header_link'}>Resume</Nav.Link>\r\n                        <Nav.Link as={NavLink} to='/Portfolio' className={pathName == '/Portfolio' ? 'header_link_active' : 'header_link'}>Portfolio</Nav.Link>\r\n                        <Nav.Link as={NavLink} to='/Contact' className={pathName == '/Contact' ? 'header_link_active' : 'header_link'}>Contact</Nav.Link>\r\n                    </Nav>\r\n\r\n                    <div className='header_right'>\r\n                        {Object.keys(resumeData.socials).map(key => (\r\n                            <a href={resumeData.socials[key].link} target='_blank'>{resumeData.socials[key].icon}</a>\r\n                        ))}\r\n                        <a href='/Contact' style={{all: 'unset'}}>\r\n                            <CustomButton text={'Contact me'} icon={<TelegramIcon />}/>\r\n                        </a>\r\n                    </div>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header);\r\n\r\n","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\components\\Footer\\Footer.js",["69"],"import React from 'react';\r\nimport './Footer.css';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport resumeData from '../../utils/resumeData';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer container_shadow'>\r\n            <div className='footer_left'>\r\n                <Typography className='footer_name'>\r\n                    {resumeData.name}.\r\n                </Typography>\r\n            </div>\r\n            <div className='footer_right'>\r\n                <Typography className='footer_copyright'>\r\n                    Designed and developed by <a>ZIANI Shamsdine</a> <br/>\r\n                    Inspired from <a href='https://themeforest.net/user/tavonline' targer='_blank'>Tavonline</a>.\r\n                </Typography>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\components\\Profile\\Profile.js",["70"],"import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport CustomTimeline, {CustomTimelineSeparator} from '../Timeline/CustomTimeline';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\n\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport resumeData from '../../utils/resumeData';\r\n\r\nimport displayimage from '../../assets/images/displayimage.jpg';\r\nimport CustomButton from '../Button/Button'\r\nimport './Profile.css';\r\nimport CV from '../../assets/CV/CV.pdf';\r\n\r\nconst CustomTimelineItem = ({title, text, link}) => (\r\n    <TimelineItem>\r\n        <CustomTimelineSeparator />\r\n        <TimelineContent className='timeline_content'>\r\n            {link? (<Typography className='timelineItem_text'>\r\n                <span><b>{title}</b>:</span> <a href={link} target='_blank'>{text}</a>\r\n            </Typography>) : (\r\n                <Typography className='timelineItem_text'><span><b>{title}</b>:</span> {text}</Typography>\r\n            )}\r\n        </TimelineContent>\r\n    </TimelineItem>\r\n);\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className='profile container_shadow'>\r\n            <div className='profile_name'>\r\n                <Typography className='name'>{resumeData.name}</Typography>\r\n                <Typography className='title'>{resumeData.title}</Typography>\r\n            </div>\r\n\r\n            <figure className='profile_image'>\r\n                <img src={displayimage} alt='displayimage'></img>\r\n            </figure>\r\n\r\n            <div className='profile_information'>\r\n                <CustomTimeline icon={<PersonOutlineIcon/>}>\r\n                    <CustomTimelineItem title='Name' text={resumeData.name}/>\r\n                    <CustomTimelineItem title='Work' text={resumeData.title}/>\r\n                    <CustomTimelineItem title='Mail' text={resumeData.email}/>\r\n\r\n                    {Object.keys(resumeData.socials).map((key) => (\r\n                        <CustomTimelineItem title={key} text={resumeData.socials[key].text} link={resumeData.socials[key].link} />\r\n                    ))}\r\n                </CustomTimeline><br/>\r\n                <div className='downloadcv_button'>\r\n                    <a href={CV} style={{all: 'unset'}} download='ZIANI_Shamsdine_CV.pdf'>\r\n                        <CustomButton text={'Download CV'} icon={<GetAppIcon />} />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\pages\\Resume\\Resume.js",[],"C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\pages\\Portfolio\\Portfolio.js",["71","72","73","74","75","76","77"],"import React, { useState } from 'react'\r\nimport { Grid, Typography, Tabs, Tab, Card, CardActionArea, CardMedia, CardContent, Grow, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\r\nimport './Portfolio.css'\r\nimport resumeData from '../../utils/resumeData'\r\n\r\nconst Portfolio = () => {\r\n\r\n    const [tabValue, setTabValue] = useState(\"All\");\r\n    const [projectDialog, setProjectDialog] = useState(false);\r\n\r\n    const ProjectDialog = () => (\r\n        <Dialog open={projectDialog} onClose={() => setProjectDialog(false)}>\r\n            <DialogTitle onClose={() => setProjectDialog(false)}>{projectDialog.title}</DialogTitle>\r\n            <img src='' alt='' />\r\n            <DialogContent>\r\n                {projectDialog.description}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {projectDialog?.links.map(link => (\r\n                    <a href={link.link} target='_blank'>{link.icon}</a>\r\n                ))}\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n\r\n    return (\r\n        <Grid container spacing={1} className='section pad_30'>\r\n            {/* Title */}\r\n            <Grid item className='section_title section_contact' xs={12} lg={5}>\r\n                <span class='spantitle'>aaaaaaaaa</span>\r\n                <Typography variant='h6' className='section_title_text'>Portfolio</Typography>\r\n            </Grid>\r\n\r\n            {/* Tabs */}\r\n            <Grid item xs={12}>\r\n                <Tabs value={tabValue} indicatorColor='white' className='customTabs' onChange={(event, newValue) => setTabValue(newValue)}>\r\n                    <Tab label='All' value='All' className={tabValue == 'All' ? 'customTabs_item active' : 'customTabs_item'} />\r\n\r\n                    {[...new Set(resumeData.projects.map(item => item.tag))].map(tag => (\r\n                        <Tab label={tag} value={tag} className={tabValue == tag ? 'customTabs_item active' : 'customTabs_item'}/>\r\n                    ))}\r\n                </Tabs>\r\n            </Grid>\r\n\r\n            {/* Projects */}\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={3}>\r\n                    {resumeData.projects.map((project) => (\r\n                        <>\r\n                            {tabValue == project.tag || tabValue == 'All' ? (     \r\n                            <Grid item xs={12} sm={6} md={4}>\r\n                                <Grow in timeout={1000}>\r\n                                    <Card className='customCard' onClick={() => setProjectDialog(project)}>\r\n                                        <CardActionArea>\r\n                                            <CardMedia className='customCard_image' image={project.image} title={project.title} />\r\n                                            <CardContent>\r\n                                                <Typography variant={'body2'} className='customCard_title'>{project.title}</Typography>\r\n                                                <Typography variant='body2' className='customCard_description'>{project.caption}</Typography>\r\n                                            </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grow>\r\n                            </Grid>\r\n                        ) : null}\r\n                        </>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            <Dialog open={projectDialog} onClose={() => setProjectDialog(false)} className='projectDialog'>\r\n                <DialogTitle onClose={() => setProjectDialog(false)}>{projectDialog.title}</DialogTitle>\r\n                <img src={projectDialog.image} alt='' className='projectDialog_image' />\r\n                <DialogContent>\r\n                <Typography className='projectDialog_description'>{projectDialog.description}</Typography>\r\n                </DialogContent>\r\n                <DialogActions className='projectDialog_actions'>\r\n                    {projectDialog?.links?.map(link => (\r\n                        <a href={link.link} target='_blank' className='projectDialog_icon'>{link.icon}</a>\r\n                    ))}\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Portfolio\r\n\r\n","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\components\\Timeline\\CustomTimeline.js",["78"],"import React from 'react'\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n\r\nimport WorkIcon from '@material-ui/icons/Work';\r\n\r\nimport './Timeline.css';\r\n\r\nconst CustomTimeline = ({title, icon, children}) => {\r\n    return (\r\n        <Timeline className='timeline'>\r\n        {/*First Item */}\r\n        <TimelineItem className='timeline_firstItem'>\r\n          <TimelineSeparator>\r\n            <TimelineDot className='timeline_dot_header'>\r\n              {icon}\r\n            </TimelineDot>\r\n            <TimelineConnector />\r\n          </TimelineSeparator>\r\n          <TimelineContent><Typography className='timeline_header'>{title}</Typography></TimelineContent>\r\n        </TimelineItem>\r\n\r\n        {children}\r\n\r\n      </Timeline>\r\n    )\r\n}\r\n\r\nexport const CustomTimelineSeparator = () => (\r\n    <TimelineSeparator className='separator_padding'>\r\n      <TimelineDot variant='outlined' className='timeline_dot' />\r\n      <TimelineConnector />\r\n    </TimelineSeparator>\r\n);\r\n\r\n\r\n\r\nexport default CustomTimeline\r\n\r\n","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\utils\\resumeData.js",["79","80","81","82"],"C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\components\\Button\\Button.js",[],"C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\pages\\Contact\\Contact.js",["83","84","85","86"],"import React from 'react';\r\nimport * as emailjs from 'emailjs-com';\r\n\r\nimport L from 'leaflet';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport { Field, Label, Control, Input, Icon, Button, Textarea, Notification } from 'rbx';\r\n\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\n\r\nimport './Contact.css';\r\n\r\nimport { Grid, Typography, TextField} from '@material-ui/core';\r\n\r\nimport resumeData from '../../utils/resumeData';\r\nimport apiKeys from '../../utils/apiKeys'\r\n\r\nlet DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nclass Contact extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      message: ''\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { name, email, message } = this.state;\r\n    const templateParams = {\r\n      from_name: name,\r\n      from_email: email,\r\n      to_name: 'Shams',\r\n      message: message\r\n    };\r\n    emailjs.send(\r\n      apiKeys.service,\r\n      apiKeys.template,\r\n      templateParams,\r\n      apiKeys.user\r\n    );\r\n    alert('Your message has been sent successfully. I will contact you soon.');\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { name, email, message} = this.state;\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        {/* Contact Form*/}\r\n        <Grid container justify='space-between' className='section section_contact'>\r\n            <Grid item className='section_title section_contact' xs={12} lg={5}>\r\n                <span class='spantitle'>aaaaaaaaaaaaaa.</span>\r\n\r\n                {/*start*/}\r\n                <Typography variant='h6' className='section_title_text'>Contact Form</Typography>\r\n\r\n                      <form onSubmit={this.handleSubmit}>\r\n            <Grid container justify='space-between'>\r\n                        <Grid item className=\"mgR-30-xs\" xs={12} sm={6}>\r\n                              <TextField fullWidth  label={'Your name'} value={name}\r\n                              onChange={event => {\r\n                                const { value } = event.target;\r\n                                this.setState({ name: value });\r\n                              }} />\r\n                        </Grid>\r\n\r\n                        <Grid item className=\"mgR-30\" xs={12} sm={5}>\r\n\r\n                              <TextField fullWidth  label={'john.doe@gmail.com'} value={email}\r\n                                              onChange={event => {\r\n                                                const { value } = event.target;\r\n                                                this.setState({ email: value });\r\n                                              }} />\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item className=\"mgR-30\" xs={12}>\r\n                              <Field>\r\n                          <Label style={{fontWeight: '600', marginTop: '15px'}}>Message</Label>\r\n                          <Control>\r\n                              <TextField fullWidth  label={'Write your message here'} value={message}\r\n                                              onChange={event => {\r\n                                                const { value } = event.target;\r\n                                                this.setState({ message: value });\r\n                                              }} multiline rows={4} />\r\n                          </Control>\r\n                          </Field>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} className='top_20'>\r\n                              <Field kind=\"group\">\r\n                              <Control>\r\n                                  <Button className='custom_btn'>Send</Button>\r\n                              </Control>\r\n                              </Field>\r\n                        </Grid>\r\n                        </Grid> \r\n                      </form>\r\n\r\n            </Grid>\r\n\r\n            <Grid item className='section_title section_contact' xs={12} lg={6}>\r\n                <span class='spantitle'>aaaaaaaaaaaaaaaaaaaaa</span>\r\n                <Typography variant='h6' className='section_title_text'>Contact Information</Typography>\r\n                <div class='top_20'>\r\n                    {resumeData.contactinformation.map(information => (\r\n                        <>\r\n                            <Typography>{information.title}</Typography>\r\n                            <span>{information.info}</span>\r\n                        </>\r\n                    ))}\r\n                </div>\r\n            </Grid>\r\n            \r\n\r\n            <Grid item xs={12}>\r\n                <MapContainer center={[45.76939, 4.86376]} zoom={13} scrollWheelZoom={true}>\r\n                    <TileLayer\r\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                    <Marker position={[45.76939, 4.86376]}>\r\n                        <Popup>\r\n                            That is where i live !\r\n                        </Popup>\r\n                    </Marker>\r\n                </MapContainer>\r\n            </Grid>\r\n        </Grid>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\Shams\\Desktop\\Paperasse\\CV\\reactcv\\src\\utils\\apiKeys.js",["87"],"export default {\r\n    service: 'service_iwwgtri',\r\n    template: 'template_kq2lz78',\r\n    user: 'user_y5p7TyXeohpuL4BH6kHM9'\r\n}",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":7,"column":9,"nodeType":"94","messageId":"95","endLine":7,"endColumn":13},{"ruleId":"96","severity":1,"message":"97","line":34,"column":75,"nodeType":"98","messageId":"99","endLine":34,"endColumn":77},{"ruleId":"96","severity":1,"message":"97","line":35,"column":84,"nodeType":"98","messageId":"99","endLine":35,"endColumn":86},{"ruleId":"96","severity":1,"message":"97","line":36,"column":82,"nodeType":"98","messageId":"99","endLine":36,"endColumn":84},{"ruleId":"100","severity":1,"message":"101","line":41,"column":29,"nodeType":"102","endLine":41,"endColumn":84},{"ruleId":"103","severity":1,"message":"104","line":17,"column":47,"nodeType":"102","endLine":17,"endColumn":50},{"ruleId":"100","severity":1,"message":"101","line":21,"column":46,"nodeType":"102","endLine":21,"endColumn":77},{"ruleId":"92","severity":1,"message":"105","line":11,"column":11,"nodeType":"94","messageId":"95","endLine":11,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":20,"column":21,"nodeType":"102","endLine":20,"endColumn":57},{"ruleId":"96","severity":1,"message":"97","line":37,"column":70,"nodeType":"98","messageId":"99","endLine":37,"endColumn":72},{"ruleId":"96","severity":1,"message":"97","line":40,"column":74,"nodeType":"98","messageId":"99","endLine":40,"endColumn":76},{"ruleId":"96","severity":1,"message":"97","line":50,"column":39,"nodeType":"98","messageId":"99","endLine":50,"endColumn":41},{"ruleId":"96","severity":1,"message":"97","line":50,"column":66,"nodeType":"98","messageId":"99","endLine":50,"endColumn":68},{"ruleId":"100","severity":1,"message":"101","line":78,"column":25,"nodeType":"102","endLine":78,"endColumn":92},{"ruleId":"92","severity":1,"message":"106","line":11,"column":8,"nodeType":"94","messageId":"95","endLine":11,"endColumn":16},{"ruleId":"92","severity":1,"message":"107","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":20},{"ruleId":"92","severity":1,"message":"108","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":19},{"ruleId":"92","severity":1,"message":"109","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":15,"column":1,"nodeType":"112","endLine":179,"endColumn":2},{"ruleId":"92","severity":1,"message":"113","line":6,"column":33,"nodeType":"94","messageId":"95","endLine":6,"endColumn":38},{"ruleId":"92","severity":1,"message":"114","line":6,"column":40,"nodeType":"94","messageId":"95","endLine":6,"endColumn":44},{"ruleId":"92","severity":1,"message":"115","line":6,"column":54,"nodeType":"94","messageId":"95","endLine":6,"endColumn":62},{"ruleId":"92","severity":1,"message":"116","line":6,"column":64,"nodeType":"94","messageId":"95","endLine":6,"endColumn":76},{"ruleId":"110","severity":1,"message":"111","line":1,"column":1,"nodeType":"112","endLine":5,"endColumn":2},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ProjectDialog' is assigned a value but never used.","'WorkIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'YouTubeIcon' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Input' is defined but never used.","'Icon' is defined but never used.","'Textarea' is defined but never used.","'Notification' is defined but never used.","no-global-assign","no-unsafe-negation"]